package geopriv4j;

import java.text.DecimalFormat;
import java.util.Random;

import geopriv4j.utils.LatLng;

public class RoundingAlgorithm {
	
    //Earthâ€™s radius, sphere
	final public static int earth_radius = 6378137;

	public LatLng round(LatLng location, int delta){

        Random rand = new Random();

        System.out.println("before rounding off locations:");

        double round_lat_delta = delta;
        double round_lng_delta = delta;
        System.out.println("delta : "+ round_lat_delta+" "+ round_lng_delta);


        double lat_in_degrees = round_lat_delta/earth_radius;
        double lng_in_degrees = round_lng_delta/(earth_radius * Math.cos(Math.PI*location.latitude/180));

        double rounded_lat =  lat_in_degrees *180/Math.PI;
        double rounded_lng =  lng_in_degrees *180/Math.PI;

        if(rand.nextGaussian()<0.5) {
            rounded_lat *=-1;
        }

        if(rand.nextGaussian()<0.5) {
            rounded_lng *=-1;
        }

        double lat = location.latitude + rounded_lat;
        double lng = location.longitude + rounded_lng;

        /*
        decimal
        places   degrees          distance
        -------  -------          --------
        0        1                111  km
        1        0.1              11.1 km
        2        0.01             1.11 km
        3        0.001            111  m
        4        0.0001           11.1 m
        5        0.00001          1.11 m
        6        0.000001         11.1 cm
        7        0.0000001        1.11 cm
        8        0.00000001       1.11 mm
         */

        if(delta<111000 && delta>11100){
            DecimalFormat ft = new DecimalFormat("####.#");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else if(delta<11100 && delta>1110){
            DecimalFormat ft = new DecimalFormat("####.##");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else if(delta<1110 && delta>111){
            DecimalFormat ft = new DecimalFormat("####.###");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else if(delta<111 && delta>11.1){
            DecimalFormat ft = new DecimalFormat("####.####");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else if(delta<11.1 && delta>1.11){
            DecimalFormat ft = new DecimalFormat("####.#####");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else if(delta<1.11 && delta>0.111){
            DecimalFormat ft = new DecimalFormat("####.######");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        else {
            DecimalFormat ft = new DecimalFormat("####.#######");
            lat = Double.parseDouble(ft.format(lat));
            lng = Double.parseDouble(ft.format(lng));
        }
        LatLng rounded = new LatLng(lat,lng);

        return rounded;
    }

}
